@page "/interop"
@inject IJSRuntime JsRuntime
@layout MainLayout
<h1>JS Interop</h1>

<h3>Create alert</h3>

<button class="btn btn-success" @onclick="ShowAlert">Show alert </button>
<br />
<br />
<hr />

<h3>Ask me a question</h3>

<input @bind="questionTxt" />

<button class="btn btn-success" @onclick="AskQuestion">Ask Question </button>

<div>
    The answer was: <span id="answerSpan"></span>
</div>


<br />
<br />
<hr />

<h3>Please focus</h3>

<input @ref="InputToFocus" width="90" />

<button class="btn btn-danger" @onclick="Focus">Focus!</button>


<br />
<br />
<hr />

<h3>Please focus - Tutorial 6 </h3>
<hr />
<h3>Give me random int </h3>

<div>
    The random number is: <span id="radnomNumberSpan"></span>
</div>
<button class="btn btn-info" onclick="generateRandomNumberFromJ(1000)">Generate Random Number</button>
<button class="btn btn-success" @onclick="GenerateRandom">Generate Random Number From Method Instance </button>



@code {

    string questionTxt = string.Empty;

    ElementReference InputToFocus;

    //protected override void OnAfterRender(bool firstRender)
    //{
    //    if (firstRender)
    //    {
    //        JsRuntime.InvokeVoidAsync(identifier: "focusOnElement", InputToFocus).GetAwaiter().GetResult();
    //    }
    //}

    async Task ShowAlert()
    {
        await JsRuntime.InvokeVoidAsync(identifier: "createAlert");
    }

    async Task AskQuestion()
    {
        var response = await JsRuntime.InvokeAsync<string>(identifier: "createQuestion", questionTxt);
        await JsRuntime.InvokeVoidAsync(identifier: "setElementTextBytId", "answerSpan", response);
    }

    async Task Focus()
    {
        await JsRuntime.InvokeVoidAsync(identifier: "focusOnElement", InputToFocus);
    }


    [JSInvokable]
    public static Task<int> GenerateRandomNumber(int maxValue)
    {
        return Task.FromResult(new Random().Next(maxValue));
    }


    [JSInvokable]
    public Task<int> MethodFromInstantiateClass(int maxValue)
    {
        return Task.FromResult(new Random().Next(maxValue));
    }

    public async Task GenerateRandom()
    {
        var response = await JsRuntime.InvokeAsync<string>(identifier: "giveMeRandomInt", 100,
        DotNetObjectReference.Create(this));
    }
}
